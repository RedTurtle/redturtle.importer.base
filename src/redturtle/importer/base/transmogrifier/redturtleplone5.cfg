[transmogrifier]
pipeline =
    catalogsource
    contentsmapping
    setuuid
    fieldscorrector
    folders
    constructor
    schemaupdater
    datafields
    leftovers
    discussions
    datesupdater
    workflowupdater
    properties
    owner
    local_roles
    context_fixes
    reindexobject
    logger
    results
#    savepoint
    commit

[catalogsource]
blueprint = redturtle.migration.cachedcatalogsource
migration-dir = /tmp/migration
file-name-in = migration_content_in.json
cache-dir = /tmp/migration/migration_cache

[contentsmapping]
blueprint = redturtle.importer.base.sections.contentsmapping

[setuuid]
blueprint = collective.transmogrifier.sections.manipulator
keys = _uid
destination = string:plone.uuid

[fieldscorrector]
blueprint = redturtle.importer.base.sections.fieldscorrector

[folders]
blueprint = collective.transmogrifier.sections.folders


[constructor]
blueprint = redturtle.importer.base.sections.constructor
overwrite = True


[schemaupdater]
blueprint = redturtle.importer.base.sections.schemaupdater

[datafields]
blueprint = redturtle.importer.base.sections.datafields

[datesupdater]
blueprint = plone.app.transmogrifier.datesupdater
path-key = _path
creation-key = creation_date
modification-key = modification_date
effective-key = effective_date
expiration-key = expiration_date

[workflowupdater]
blueprint = redturtle.importer.base.sections.workflowupdater

[leftovers]
blueprint = redturtle.importer.base.sections.leftovers

[discussions]
blueprint = redturtle.importer.base.sections.discussions
path-key = _path

[properties]
blueprint = collective.jsonmigrator.properties

[browser-default]
blueprint = plone.app.transmogrifier.browserdefault

[owner]
blueprint = collective.jsonmigrator.owner

[local_roles]
blueprint = redturtle.importer.base.sections.localroles

[reindexobject]
blueprint = plone.app.transmogrifier.reindexobject

[context_fixes]
blueprint = redturtle.importer.base.sections.context_fixes

[logger]
blueprint = redturtle.importer.base.sections.logger
keys =
    _type
    _path

[results]
blueprint = redturtle.importer.base.sections.migrationresults
migration-dir = /tmp/migration
file-name-out = migration_content_out.json
broken-links-tiny = broken_links.json
noreference_links = noreference_links.json
errors_log = errors.json

[savepoint]
blueprint = collective.transmogrifier.sections.savepoint
every = 10

[commit]
blueprint = redturtle.importer.base.sections.commit
every = 10

[printer]
blueprint = redturtle.impoerter.base.sections.pprinter
